@page "/editgame"
@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject GenresClient GenresClient

<PageTitle>New Game</PageTitle>

<h3>New Game</h3>

@if (_genres is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="_game" FormName="editGame" OnSubmit="HandleSubmit">
                @* NAME *@
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <InputText id="name" @bind-Value="_game.Name" class="form-control"/>
                </div>

                @* GENRE*@
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre</label>
                    <InputSelect id="genre" class="form-select" @bind-Value="_game.GenreId">
                        <option value="">Select a genre</option>
                        @foreach (var genre in _genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                </div>

                @* PRICE *@
                <div class="mb-3">
                    <label for="price" class="form-label">Price</label>
                    <InputNumber id="price" @bind-Value="_game.Price" class="form-control"/>
                </div>

                @* RELEASE DATE *@
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date</label>
                    <InputDate id="releaseDate" class="form-control" @bind-Value="_game.ReleaseDate"/>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="/" role="button" class="btn btn-secondary">Cancel</a>
            </EditForm>
        </div>
    </div>
}

@code {

    [SupplyParameterFromForm]
    private GameDetails _game { get; set; } = new()
    {
        Name = string.Empty,
        ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
    };

   
    private Genre[]? _genres;

    protected override void OnInitialized()
    {
        _genres = GenresClient.GetGenres();
    }

    private void HandleSubmit()
    {
        GamesClient.AddGame(_game);
        NavigationManager.NavigateTo("/");
    }
}